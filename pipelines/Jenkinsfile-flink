#!groovy
@Library(['cicd-pipeline', 'cop-pipeline-step']) _

import groovy.transform.Field

@Field def teamName = 'GC-Bots'
@Field def versionSuffix = ''
@Field def artemisJarfileName

@Field Map testAWS = [
        role: "gc-antibots-bmx-s3-role",
        roleAccount: "439314357471",
        region: "cn-northwest-1",
]

@Field Map prodAWS = [
        role: "gc-antibots-bmx-s3-role",
        roleAccount: "439413396736",
        region: "cn-northwest-1",
]
def awsCliTest = "aws s3api list-objects-v2 --bucket litx-test-artemis-analytics --prefix code/ " +
                "--query 'reverse(sort_by(Contents[?contains(Key, `artemis-analytic`)], &LastModified))[:1].Key' " +
                "--output=json --region=cn-northwest-1"

def awsClitProd = "aws s3api list-objects-v2 --bucket litx-prod-artemis-analytics --prefix code/ " +
                "--query 'reverse(sort_by(Contents[?contains(Key, `artemis-analytic`)], &LastModified))[:1].Key' " +
                "--output=json --region=cn-northwest-1"

def awsCli = params.Deploy_Environment == 'prod' ? awsClitProd : awsCliTest

Map getAWSRole = params.Deploy_Environment == 'prod' ? prodAWS : testAWS

node('ec2-ondemand-agent-cn') {
    genericBuild([
            image: "amazon/aws-cli",
            aws: getAWSRole,
            withClosure:{
                def tempAwsResponse = steps.readJSON(text: steps.sh(
                        returnStdout: true,
                        script: awsCli
                ).trim())
                artemisJarfileName = tempAwsResponse[0]
            },
    ])
    steps.echo "\n*****************************\n\tThis is the latest news: ${artemisJarfileName}\n*****************************"
}

def config = [
    usePraDispatch: false,
    tags: [
            'Name': 'artemis-analytics',
            'costcenter': '104420',
            'classification'  : 'Silver',
            'email': 'Lst-gc-cdn-antibots.admin@nike.com',
            'owner': teamName,
            'nike-department': 'Web Eng - nike.com Cloud Capability',
            'nike-domain': teamName,
            'nike-application': 'artemis-analytics-flink',
            'nike-distributionlist': 'Lst-gc-cdn-antibots.admin@nike.com',
            'nike-owner'           : 'Frank.Zhao@nike.com',
    ],
    branchMatcher: [
            TEST_RELEASE: ['main'],
            PULL_REQUEST: ['^(?!main$).*$'],
    ],

    deploymentEnvironment: [
        test: [
            agentLabel: 'ec2-ondemand-agent-cn',
            deployFlow: [
                    TEST_RELEASE: ['Build','Archive Current State', 'Deploy Infrastructure', 'Post-Deploy Hook'],
            ],
            aws: [
                role: "NIKE.cicd.tool",
                roleAccount: "439314357471",
                region: "cn-northwest-1",
            ],
            cf: [
                stackName: "artemis-analytics"+versionSuffix,
                templateFile: "./cloudformation/artemis-analytics-kinesis.yml",
                parameters: [
                        VersionSuffix: '-test',
                        ArtemisAnalyticsJarFile: artemisJarfileName
                ],
            ],
            postDeployHook: [
                    build: [
                            image: "amazon/aws-cli",
                            cmd: "aws kinesisanalyticsv2 start-application --application-name artemis-analytics-test",
                            aws: [
                                    role: "NIKE.cicd.tool",
                                    roleAccount: "439314357471",
                                    region: "cn-northwest-1",
                            ],
                    ],
            ],
            tags: [
                'nike-environment': 'test',
            ],
        ],

        prod: [
                agentLabel: 'ec2-ondemand-agent-cn',
                deployFlow: [
                        PROD_RELEASE: ['Archive Current State', 'Deploy Infrastructure'],
                ],
                aws: [
                        role: "NIKE.cicd.tool",
                        roleAccount: "439413396736",
                        region: "cn-northwest-1",
                ],
                cf: [
                        stackName: "artemis-analytics"+versionSuffix,
                        templateFile: "./cloudformation/artemis-analytics-kinesis.yml",
                        parameters: [
                                VersionSuffix: '-prod',
                                ArtemisAnalyticsJarFile: artemisJarfileName
                        ],
                ],
                tags: [
                        'nike-environment': 'prod',
                ],
        ],
    ],
    notify: [
            slack: [
                    onCondition: ['Build Start', 'Failure', 'Success', 'Unstable'],
                    channel: '#gc-artemis-analytic-pipeline',
            ],
    ],
]
cloudformationPipeline(config)